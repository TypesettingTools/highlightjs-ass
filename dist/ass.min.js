/*! `ass` grammar compiled for Highlight.js 11.5.0 */
(()=>{var e=(()=>{"use strict"
;const e=["alpha","iclip","xbord","xshad","ybord","yshad","blur","bord","clip","fade","fscx","fscy","move","shad","fad","fax","fay","frx","fry","frz","fsc","fsp","org","pbo","pos","1a","1c","2a","2c","3a","3c","4a","4c","an","be","fe","fn","fr","fs","kf","ko","K","a","b","c","i","k","p","q","r","s","t","u"]
;return a=>{var s={begin:/{/,end:/}|$/,scope:"punctuation",contains:[{
match:a.regex.concat(/\\/,a.regex.either(...e)),scope:"title.function",starts:{
scope:"params",end:a.regex.lookahead(/\\|\}/),excludeEnd:!0},relevance:5}],
relevance:0};return{aliases:["ass","AdvancedSubStationAlpha","ssa"],
case_insensitive:!0,contains:[s,{begin:/^Dialogue: /,beginScope:"attr",end:/$/,
contains:[{begin:/\d*,\d+:\d\d:\d\d.\d+,\d+:\d\d:\d\d.\d+,/,
end:a.regex.lookahead(/,/),excludeBegin:!0,scope:"symbol"},s]},{scope:"section",
match:/^\[.*\]$/,relevance:1},a.COMMENT(/^;/,/$/),a.COMMENT(/^Comment: /,/$/),{
scope:"attr",match:/^(?!Dialogue: |Comment: )[^,:\[\]\n]+: /,relevance:0}]}}})()
;hljs.registerLanguage("ass",e)})();